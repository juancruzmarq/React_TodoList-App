{"ast":null,"code":"var _jsxFileName = \"/home/jc/Escritorio/prog/portfolio/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Hacer la compra\",\n    completed: false\n  }]);\n  const KEY = \"todoApp.todos\";\n  const todoTaskRef = useRef();\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(KEY));\n\n    if (storedTodos) {\n      setTodos(storedTodos);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  const toggleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = () => {\n    const task = todoTaskRef.current.value;\n    if (task === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        task,\n        completed: false\n      }];\n    });\n    todoTaskRef.current.value = '';\n  };\n\n  const handleClearAll = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoTaskRef,\n      type: \"text\",\n      placeholder: \"Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTodoAdd,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" Te quedan \", todos.filter(todo => !todo.completed).length, \" tareas por terminar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"KBDtFVJgDx2z5o8YAdKdTMH/keQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jc/Escritorio/prog/portfolio/src/App.jsx"],"names":["React","Fragment","useState","useRef","useEffect","v4","uuidv4","TodoList","App","todos","setTodos","id","task","completed","KEY","todoTaskRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","toggleTodo","newTodos","todo","find","handleTodoAdd","current","value","prevTodos","handleClearAll","filter","length"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useRef, useEffect} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from \"./components/TodoList\";\n\nexport function App(){\n    const [todos, setTodos] = useState([\n        {id: 1, task: \"Hacer la compra\", completed: false},\n    ]);\n\n    const KEY = \"todoApp.todos\"\n\n    const todoTaskRef = useRef();\n\n    useEffect(() => {\n        const storedTodos = JSON.parse(localStorage.getItem(KEY));\n        if(storedTodos){\n            setTodos(storedTodos);\n        }\n    }, []);\n\n    useEffect( () => {\n        localStorage.setItem(KEY, JSON.stringify(todos));\n    }, [todos]);\n\n    const toggleTodo  = (id)=>{\n        const newTodos = [...todos];\n        const todo = newTodos.find(todo => todo.id === id);\n        todo.completed = !todo.completed;\n        setTodos(newTodos);\n    }\n\n    const handleTodoAdd = ()=>{\n        const task = todoTaskRef.current.value;\n        if (task === '') return;\n\n        setTodos((prevTodos)=>{\n            return [...prevTodos, {id: uuidv4(), task, completed: false}];        })\n        todoTaskRef.current.value = '';\n    };\n\n    const handleClearAll = () =>{\n        const newTodos = todos.filter( (todo) => !todo.completed);\n        setTodos(newTodos);\n    }\n\n\n    return (\n        <Fragment>\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\n            <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\"/>\n            <button onClick={handleTodoAdd}>➕</button>\n            <button onClick={handleClearAll}>🗑️</button>\n            <div> Te quedan {todos.filter((todo)=> !todo.completed).length } tareas por terminar</div>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}