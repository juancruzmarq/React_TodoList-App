{"ast":null,"code":"var _jsxFileName = \"/home/jc/Escritorio/prog/portfolio/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Hacer la compra\",\n    completed: false\n  }]);\n  const todoTaskRef = useRef();\n\n  const toggleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleTodoAdd = () => {\n    const task = todoTaskRef.current.value;\n    if (task === '') return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        task,\n        completed: false\n      }];\n    });\n    todoTaskRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoTaskRef,\n      type: \"text\",\n      placeholder: \"Nueva Tarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTodoAdd,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uD83D\\uDDD1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"4Iqi3GZ2+TabxgoC17kScbNRBoM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/jc/Escritorio/prog/portfolio/src/App.jsx"],"names":["React","Fragment","useState","useRef","v4","uuidv4","TodoList","App","todos","setTodos","id","task","completed","todoTaskRef","toggleTodo","newTodos","todo","find","handleTodoAdd","current","value","prevTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,OAAO,SAASC,GAAT,GAAc;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAC/B;AAACQ,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE,iBAAd;AAAiCC,IAAAA,SAAS,EAAE;AAA5C,GAD+B,CAAD,CAAlC;AAIA,QAAMC,WAAW,GAAGV,MAAM,EAA1B;;AAEA,QAAMW,UAAU,GAAKJ,EAAD,IAAM;AACtB,UAAMK,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAjB;AACA,UAAMQ,IAAI,GAAGD,QAAQ,CAACE,IAAT,CAAcD,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAAlC,CAAb;AACAM,IAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACAH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GALD;;AAOA,QAAMG,aAAa,GAAG,MAAI;AACtB,UAAMP,IAAI,GAAGE,WAAW,CAACM,OAAZ,CAAoBC,KAAjC;AACA,QAAIT,IAAI,KAAK,EAAb,EAAiB;AAEjBF,IAAAA,QAAQ,CAAEY,SAAD,IAAa;AAClB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACX,QAAAA,EAAE,EAAEL,MAAM,EAAX;AAAeM,QAAAA,IAAf;AAAqBC,QAAAA,SAAS,EAAE;AAAhC,OAAf,CAAP;AAAuE,KADnE,CAAR;AAEAC,IAAAA,WAAW,CAACM,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACH,GAPD;;AAYA,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,KAAjB;AAAwB,MAAA,UAAU,EAAEM;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,GAAG,EAAED,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,WAAW,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEK,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlCeX,G;;KAAAA,G","sourcesContent":["import React, {Fragment, useState, useRef} from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { TodoList } from \"./components/TodoList\";\n\nexport function App(){\n    const [todos, setTodos] = useState([\n        {id: 1, task: \"Hacer la compra\", completed: false},\n    ]);\n\n    const todoTaskRef = useRef();\n\n    const toggleTodo  = (id)=>{\n        const newTodos = [...todos];\n        const todo = newTodos.find(todo => todo.id === id);\n        todo.completed = !todo.completed;\n        setTodos(newTodos);\n    }\n\n    const handleTodoAdd = ()=>{\n        const task = todoTaskRef.current.value;\n        if (task === '') return;\n\n        setTodos((prevTodos)=>{\n            return [...prevTodos, {id: uuidv4(), task, completed: false}];        })\n        todoTaskRef.current.value = '';\n    };\n\n    \n\n\n    return (\n        <Fragment>\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\n            <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\"/>\n            <button onClick={handleTodoAdd}>➕</button>\n            <button>🗑️</button>\n        </Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}